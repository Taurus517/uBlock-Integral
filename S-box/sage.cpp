#include<stdio.h>
#include<math.h>

#define N1 300
#define N2 300
#define M 9 

int choose(int x[N1][M], int y[N2][M-1]){
    int i, j, temp;
    int z[N1] = {0};
    //How many points are not satisfied for each inequality.
    for(i = 0; i < N1; i++){
        for(j = 0; j < N2; j++){
            if((x[i][0]*y[j][0] + x[i][1]*y[j][1] + x[i][2]*y[j][2] + x[i][3]*y[j][3] + x[i][4]*y[j][4] + x[i][5]*y[j][5] + x[i][6]*y[j][6] + x[i][7]*y[j][7] + x[i][8]) < 0){
                z[i]++;
            }
        }
    }
    temp = z[0];
    j = 0;
    //Finding the inequality and its count is the largest.
    for(i = 1; i < N1; i++){
        if(z[i] > temp){
            j = i;
            temp = z[j];
        }
    }
    if(temp != 0){
        //Delete the points corresponding to the largest inequality.
        for(i = 0; i < N2; i++){
            if((x[j][0]*y[i][0] + x[j][1]*y[i][1] + x[j][2]*y[i][2] + x[j][3]*y[i][3] + x[j][4]*y[i][4] + x[j][5]*y[i][5] + x[j][6]*y[i][6] + x[j][7]*y[i][7] + x[j][8]) < 0){
                y[i][0] = 0; y[i][1] = 0; y[i][2] = 0; y[i][3] = 0; y[i][4] = 0; y[i][5] = 0; y[i][6] = 0; y[i][7] = 0;
            }
        }
        //Output inequality and the number of points that are not satisfied.
        for(i = 0; i < 8; i++){
            if(x[j][i] < 0){
                printf(" - %d*x%d", abs(x[j][i]), i + 1);
            }
            else{
                printf(" + %d*x%d", x[j][i], i + 1);
            }                
        }
        printf(" >= %d; %6d\n", x[j][8], temp);  
        x[j][0] = 0; x[j][1] = 0; x[j][2] = 0; x[j][3] = 0; x[j][4] = 0; x[j][5] = 0; x[j][6] = 0; x[j][7] = 0; x[j][8] = 0;
        return temp;
    }
    else{
        return 0;
    }
}



int main(){

    //In SageMath, the cofficients of the equality of the Sbox are obtained.
    int a[N1][M] = {{0, -1, 0, 0, 0, 0, 0, 0, 1}, 
{-1, 0, 0, 0, 0, 0, 0, 0, 1}, 
{-2, -1, -1, 0, -1, 1, 1, 0, 3}, 
{0, 0, -1, 0, 0, 0, 0, 0, 1}, 
{0, 0, 0, 0, 0, -1, 0, 0, 1}, 
{-1, 0, -1, 0, 1, -1, -1, 0, 3}, 
{-1, -1, 0, 0, -1, 1, 0, 0, 2}, 
{0, 0, 0, 0, -1, 0, 0, 0, 1}, 
{0, 0, 0, 0, 0, 0, -1, 0, 1}, 
{1, 0, 0, 0, -1, -1, -1, 0, 2}, 
{0, 0, 0, 0, 0, 0, 0, -1, 1}, 
{-1, 0, 0, 0, 1, -1, -1, -1, 3}, 
{-1, -1, -1, 0, -1, 0, 1, 0, 3}, 
{0, 0, 0, -1, -1, 0, -1, 1, 2}, 
{-2, -1, -1, -1, 0, 1, 0, 1, 3}, 
{-2, 0, -2, -1, 1, 0, -1, 1, 4}, 
{-2, -1, -1, -3, 2, 1, 1, -1, 4}, 
{-1, 0, 0, -1, 1, 0, 0, -1, 2}, 
{-3, -2, -1, -1, -1, 2, 1, 1, 4}, 
{-1, 0, -1, -1, 1, 0, 0, 0, 2}, 
{-1, -1, -1, -2, 1, 0, 1, 0, 3}, 
{-2, -1, -1, -2, 1, 1, 1, 0, 3}, 
{-3, -2, -1, -2, 0, 2, 1, 1, 4}, 
{-1, -1, 0, -2, 1, 1, 0, -1, 3}, 
{-1, -1, 0, -1, 0, 1, 0, 0, 2}, 
{0, 0, 0, -1, 0, 0, 0, 0, 1}, 
{-1, -1, 0, -1, -1, 1, 0, 1, 2}, 
{0, -1, 0, -1, -1, 0, 0, 1, 2}, 
{-3, -3, -1, -2, -1, 2, 1, 2, 5}, 
{-2, -2, -1, -1, -1, 2, 0, 1, 4}, 
{-1, -3, -1, -2, -1, 0, 1, 2, 5}, 
{-4, -3, -2, -2, -1, 3, 1, 2, 6}, 
{1, -1, -1, 0, 1, 0, 1, 0, 1}, 
{0, 0, 0, 0, 0, 0, 0, 1, 0}, 
{-1, 0, 1, 1, 1, -1, 0, 0, 1}, 
{-1, 0, 1, 0, 1, -1, 1, 0, 1}, 
{0, 0, -1, 0, 1, 1, 1, 0, 0}, 
{-1, -1, 1, -2, 1, 1, 3, 2, 0}, 
{-1, -1, 0, -2, 1, 2, 3, 2, 0}, 
{-1, 0, -1, -1, 1, 2, 2, 1, 0}, 
{-1, 0, 1, -1, 1, 0, 2, 1, 0}, 
{-1, -1, 0, -1, 0, 1, 1, 1, 1}, 
{1, 1, 0, 0, -1, 0, -1, 0, 1}, 
{1, -1, 0, 1, 1, 1, 0, 0, 0}, 
{-1, -1, -2, 1, 1, 1, -1, 2, 3}, 
{1, -1, -1, 1, 2, 1, 1, 0, 0}, 
{-1, 0, -1, 0, 1, 2, 1, 1, 0}, 
{-1, 0, -1, 0, 0, 1, 1, 0, 1}, 
{0, 0, 1, -1, -1, 0, 0, 1, 1}, 
{0, 0, 1, -1, 0, 0, 1, 1, 0}, 
{-1, 0, -1, -1, 1, 1, 1, 0, 1}, 
{2, 1, 0, 0, -2, -1, -1, -1, 3}, 
{0, 0, 0, 0, 0, 1, 0, 0, 0}, 
{-2, -1, -1, -3, 2, 1, 2, 0, 3}, 
{2, 1, 1, 0, -2, -1, 0, -1, 2}, 
{-2, -1, -1, -1, 0, 2, 1, 1, 2}, 
{0, -1, 0, -1, 0, 0, 1, 1, 1}, 
{2, 1, 0, 1, -2, -1, -1, 0, 2}, 
{1, -1, 0, 0, 1, 1, 1, 0, 0}, 
{1, -1, 0, 0, 1, 1, 0, -1, 1}, 
{0, 0, 1, 0, 0, 0, 0, 0, 0}, 
{1, 1, 1, 0, -1, 0, 0, 0, 0}, 
{0, 0, 0, 0, 0, 0, 1, 0, 0}, 
{0, -1, 0, 0, 1, 1, 1, 1, 0}, 
{-1, 1, -1, 0, 1, 0, 0, 0, 1}, 
{1, -1, -1, 0, 2, 1, 1, -1, 1}, 
{-1, 0, 0, 1, 1, -1, -1, 0, 2}, 
{1, 1, 0, 1, -1, -1, 0, 0, 1}, 
{2, 1, 1, 1, -2, -1, 0, 0, 1}, 
{0, 1, 0, 0, 0, 0, 0, 0, 0}, 
{1, 0, 0, 0, 0, 0, 0, 0, 0}, 
{0, 0, 0, -1, -1, 1, 0, 1, 1}, 
{1, 1, 0, 0, -1, -1, 0, -1, 2}, 
{1, 0, 1, 0, -1, -1, 0, 0, 1}, 
{-1, 1, -1, 0, 1, 1, 1, 0, 0}, 
{-2, 0, -2, -1, 1, 3, 2, 1, 1}, 
{0, 0, 0, 0, 1, 0, 0, 0, 0}, 
{0, 0, 0, -1, 0, 1, 1, 1, 0}, 
{1, -2, -1, 2, 3, 2, 1, 1, 0}, 
{0, -1, -1, 1, 1, 1, 0, 1, 1}, 
{-1, -1, 0, -1, 1, 2, 2, 2, 0}, 
{-1, 0, 1, 0, 1, -1, 0, -1, 2}, 
{-1, -1, 0, -2, 1, 1, 2, 1, 1}, 
{1, -1, -1, 0, 2, 1, 2, 0, 0}, 
{-1, 1, 0, 0, 1, 0, 1, 0, 0}, 
{-1, 0, 1, 0, 1, 0, 1, 1, 0}, 
{-1, 1, 0, 0, 1, 0, 0, -1, 1}, 
{-1, 0, 0, -1, 1, 0, 1, 0, 1}, 
{0, -1, 0, -1, 1, 1, 2, 1, 0}, 
{-1, -1, 1, -1, 1, 1, 2, 2, 0}, 
{-1, 0, -1, 0, 1, 0, -1, 1, 2}, 
{0, 0, 0, 1, 0, 0, 0, 0, 0}, 
{-1, 1, 0, 1, 1, 0, 0, 0, 0}, 
{-1, -1, -1, 0, 0, 1, 0, 1, 2}, 
{-1, -1, -2, 1, 1, 2, 0, 2, 2}};

    //It doesn't satisfy the Sbox. points
    int b[N2][M-1] = {{0, 0, 0, 1, 0, 0, 0, 0},
{0, 0, 1, 0, 0, 0, 0, 0},
{0, 0, 1, 1, 0, 0, 0, 0},
{0, 1, 0, 0, 0, 0, 0, 0},
{0, 1, 0, 1, 0, 0, 0, 0},
{0, 1, 1, 0, 0, 0, 0, 0},
{0, 1, 1, 1, 0, 0, 0, 0},
{1, 0, 0, 0, 0, 0, 0, 0},
{1, 0, 0, 1, 0, 0, 0, 0},
{1, 0, 1, 0, 0, 0, 0, 0},
{1, 0, 1, 1, 0, 0, 0, 0},
{1, 1, 0, 0, 0, 0, 0, 0},
{1, 1, 0, 1, 0, 0, 0, 0},
{1, 1, 1, 0, 0, 0, 0, 0},
{1, 1, 1, 1, 0, 0, 0, 0},
{0, 0, 1, 0, 0, 0, 0, 1},
{0, 0, 1, 1, 0, 0, 0, 1},
{0, 1, 0, 0, 0, 0, 0, 1},
{0, 1, 0, 1, 0, 0, 0, 1},
{0, 1, 1, 0, 0, 0, 0, 1},
{0, 1, 1, 1, 0, 0, 0, 1},
{1, 0, 0, 0, 0, 0, 0, 1},
{1, 0, 0, 1, 0, 0, 0, 1},
{1, 0, 1, 0, 0, 0, 0, 1},
{1, 0, 1, 1, 0, 0, 0, 1},
{1, 1, 0, 1, 0, 0, 0, 1},
{1, 1, 1, 0, 0, 0, 0, 1},
{1, 1, 1, 1, 0, 0, 0, 1},
{0, 1, 0, 0, 0, 0, 1, 0},
{0, 1, 1, 0, 0, 0, 1, 0},
{1, 0, 0, 0, 0, 0, 1, 0},
{1, 0, 1, 0, 0, 0, 1, 0},
{1, 0, 1, 1, 0, 0, 1, 0},
{1, 1, 0, 1, 0, 0, 1, 0},
{1, 1, 1, 0, 0, 0, 1, 0},
{1, 1, 1, 1, 0, 0, 1, 0},
{0, 1, 0, 0, 0, 0, 1, 1},
{0, 1, 0, 1, 0, 0, 1, 1},
{0, 1, 1, 0, 0, 0, 1, 1},
{0, 1, 1, 1, 0, 0, 1, 1},
{1, 0, 0, 0, 0, 0, 1, 1},
{1, 0, 0, 1, 0, 0, 1, 1},
{1, 0, 1, 0, 0, 0, 1, 1},
{1, 0, 1, 1, 0, 0, 1, 1},
{1, 1, 0, 1, 0, 0, 1, 1},
{1, 1, 1, 1, 0, 0, 1, 1},
{0, 0, 0, 1, 0, 1, 0, 0},
{0, 1, 0, 1, 0, 1, 0, 0},
{0, 1, 1, 0, 0, 1, 0, 0},
{0, 1, 1, 1, 0, 1, 0, 0},
{1, 0, 0, 0, 0, 1, 0, 0},
{1, 0, 0, 1, 0, 1, 0, 0},
{1, 0, 1, 0, 0, 1, 0, 0},
{1, 0, 1, 1, 0, 1, 0, 0},
{1, 1, 0, 0, 0, 1, 0, 0},
{1, 1, 0, 1, 0, 1, 0, 0},
{1, 1, 1, 1, 0, 1, 0, 0},
{0, 1, 1, 0, 0, 1, 0, 1},
{0, 1, 1, 1, 0, 1, 0, 1},
{1, 0, 0, 0, 0, 1, 0, 1},
{1, 0, 0, 1, 0, 1, 0, 1},
{1, 0, 1, 0, 0, 1, 0, 1},
{1, 0, 1, 1, 0, 1, 0, 1},
{1, 1, 0, 0, 0, 1, 0, 1},
{1, 1, 0, 1, 0, 1, 0, 1},
{1, 1, 1, 1, 0, 1, 0, 1},
{1, 0, 0, 0, 0, 1, 1, 0},
{1, 0, 1, 0, 0, 1, 1, 0},
{1, 0, 1, 1, 0, 1, 1, 0},
{1, 1, 0, 0, 0, 1, 1, 0},
{1, 1, 1, 0, 0, 1, 1, 0},
{1, 1, 1, 1, 0, 1, 1, 0},
{1, 0, 0, 0, 0, 1, 1, 1},
{1, 0, 0, 1, 0, 1, 1, 1},
{1, 0, 1, 0, 0, 1, 1, 1},
{1, 0, 1, 1, 0, 1, 1, 1},
{1, 1, 0, 0, 0, 1, 1, 1},
{1, 1, 0, 1, 0, 1, 1, 1},
{1, 1, 1, 0, 0, 1, 1, 1},
{1, 1, 1, 1, 0, 1, 1, 1},
{0, 0, 0, 0, 1, 0, 0, 0},
{0, 0, 0, 1, 1, 0, 0, 0},
{0, 0, 1, 1, 1, 0, 0, 0},
{0, 1, 0, 1, 1, 0, 0, 0},
{0, 1, 1, 1, 1, 0, 0, 0},
{1, 0, 0, 1, 1, 0, 0, 0},
{1, 0, 1, 0, 1, 0, 0, 0},
{1, 0, 1, 1, 1, 0, 0, 0},
{1, 1, 0, 0, 1, 0, 0, 0},
{1, 1, 0, 1, 1, 0, 0, 0},
{1, 1, 1, 0, 1, 0, 0, 0},
{1, 1, 1, 1, 1, 0, 0, 0},
{0, 0, 0, 0, 1, 0, 0, 1},
{0, 0, 0, 1, 1, 0, 0, 1},
{1, 0, 1, 0, 1, 0, 0, 1},
{1, 0, 1, 1, 1, 0, 0, 1},
{1, 1, 0, 0, 1, 0, 0, 1},
{1, 1, 0, 1, 1, 0, 0, 1},
{1, 1, 1, 0, 1, 0, 0, 1},
{1, 1, 1, 1, 1, 0, 0, 1},
{0, 0, 0, 0, 1, 0, 1, 0},
{0, 0, 0, 1, 1, 0, 1, 0},
{0, 0, 1, 0, 1, 0, 1, 0},
{0, 0, 1, 1, 1, 0, 1, 0},
{0, 1, 0, 1, 1, 0, 1, 0},
{0, 1, 1, 1, 1, 0, 1, 0},
{1, 0, 0, 1, 1, 0, 1, 0},
{1, 0, 1, 1, 1, 0, 1, 0},
{1, 1, 0, 0, 1, 0, 1, 0},
{1, 1, 0, 1, 1, 0, 1, 0},
{1, 1, 1, 0, 1, 0, 1, 0},
{1, 1, 1, 1, 1, 0, 1, 0},
{0, 0, 0, 0, 1, 0, 1, 1},
{0, 0, 0, 1, 1, 0, 1, 1},
{0, 0, 1, 0, 1, 0, 1, 1},
{0, 0, 1, 1, 1, 0, 1, 1},
{1, 1, 0, 0, 1, 0, 1, 1},
{1, 1, 0, 1, 1, 0, 1, 1},
{1, 1, 1, 0, 1, 0, 1, 1},
{1, 1, 1, 1, 1, 0, 1, 1},
{0, 0, 0, 0, 1, 1, 0, 0},
{0, 0, 0, 1, 1, 1, 0, 0},
{0, 0, 1, 0, 1, 1, 0, 0},
{0, 1, 0, 0, 1, 1, 0, 0},
{0, 1, 0, 1, 1, 1, 0, 0},
{0, 1, 1, 1, 1, 1, 0, 0},
{1, 0, 0, 1, 1, 1, 0, 0},
{1, 1, 0, 1, 1, 1, 0, 0},
{1, 1, 1, 0, 1, 1, 0, 0},
{1, 1, 1, 1, 1, 1, 0, 0},
{0, 0, 0, 0, 1, 1, 0, 1},
{0, 0, 0, 1, 1, 1, 0, 1},
{0, 0, 1, 0, 1, 1, 0, 1},
{0, 0, 1, 1, 1, 1, 0, 1},
{0, 1, 0, 0, 1, 1, 0, 1},
{0, 1, 0, 1, 1, 1, 0, 1},
{1, 1, 1, 0, 1, 1, 0, 1},
{1, 1, 1, 1, 1, 1, 0, 1},
{0, 0, 0, 0, 1, 1, 1, 0},
{0, 0, 0, 1, 1, 1, 1, 0},
{0, 0, 1, 0, 1, 1, 1, 0},
{0, 0, 1, 1, 1, 1, 1, 0},
{0, 1, 0, 0, 1, 1, 1, 0},
{0, 1, 0, 1, 1, 1, 1, 0},
{0, 1, 1, 0, 1, 1, 1, 0},
{0, 1, 1, 1, 1, 1, 1, 0},
{1, 0, 0, 1, 1, 1, 1, 0},
{1, 0, 1, 1, 1, 1, 1, 0},
{1, 1, 0, 1, 1, 1, 1, 0},
{1, 1, 1, 1, 1, 1, 1, 0},
{0, 0, 0, 0, 1, 1, 1, 1},
{0, 0, 0, 1, 1, 1, 1, 1},
{0, 0, 1, 0, 1, 1, 1, 1},
{0, 0, 1, 1, 1, 1, 1, 1},
{0, 1, 0, 0, 1, 1, 1, 1},
{0, 1, 0, 1, 1, 1, 1, 1},
{0, 1, 1, 0, 1, 1, 1, 1},
{0, 1, 1, 1, 1, 1, 1, 1}};

    while(choose(a,b) != 0){
        choose(a,b);
    }
}